{"version":3,"sources":["service/phoneboook.js","App.js","index.js"],"names":["basrUrl","axios","get","then","response","data","newObject","post","id","delete","object","put","NotificationErr","message","className","NotificationSucc","App","useState","persons","setPersons","errMessage","setErrMessage","succMessage","setSuccMessage","useEffect","phoneBookService","returnPerson","newName","setNewname","newPhone","setNewphone","filterName","setFiltername","upClick","changePerson","map","person","catch","error","name","setTimeout","value","onChange","event","target","onSubmit","preventDefault","number","some","alert","phonePerson","find","phone","window","confirm","concat","type","filter","toLowerCase","includes","onClick","delPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad1d77d1.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//const basrUrl = \"http://localhost:3001/persons\";\nconst basrUrl = \"api/persons\";\n// const getAll = () => {\n//   axios.get(basrUrl).then((response) => {\n//     return response.data;\n//   });\n// };\nconst getAll = () => {\n  const request = axios.get(basrUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(basrUrl, newObject);\n\n  return request.then((response) => response.data);\n};\n\nconst deleteId = (id) => {\n  return axios.delete(`${basrUrl}/${id}`);\n};\n\nconst updata = (object,id) => {\n  const request =  axios.put(`${basrUrl}/${id}`,object) ;\n  return request.then(response => response.data)\n}\nexport default {\n  getAll,\n  create,\n  deleteId,\n  updata\n};\n","//import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n//import axios from \"axios\";\nimport phoneBookService from \"./service/phoneboook\";\n//const url = \"http://localhost:3001/persons\";\n// import NotificationErr from './service/notification'\n// import NotificationSucc from './service/notification'\n\nconst NotificationErr = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\nconst NotificationSucc = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"successful\">{message}</div>;\n};\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [errMessage, setErrMessage] = useState(\" some error \");\n  const [succMessage, setSuccMessage] = useState(\"\");\n  useEffect(() => {\n    phoneBookService.getAll().then((returnPerson) => {\n      setPersons(returnPerson);\n    });\n  }, []);\n  const [newName, setNewname] = useState(\"\");\n  const [newPhone, setNewphone] = useState(\"\");\n  const [filterName, setFiltername] = useState(\"\");\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const object = {\n      //新添加的对象\n      name: newName,\n      number: newPhone,\n      //id: persons.length + 1,   //id要自动生成\n    };\n    const alreadyExit = persons.some((person) => person.name === object.name); //some返回一bollean型数据\n    if (alreadyExit) {\n      alert(`${newName} is already exited`);\n      setErrMessage(`${newName} is already exited`)\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000);\n      const phonePerson = persons.find(\n        //找到需要被替代的人\n        (person) => person.name === newName && person.phone !== newPhone\n      );\n\n      const changePerson = { ...phonePerson, number: newPhone }; //新的对象\n\n      if (phonePerson !== null) {\n        //upatePhone({ ...object, id:phonePerson.id });\n        //这里要注意，在更新电话号码的时候，id仍然为persons中已经存在的人的id，只是将新的电话号码更新到原先的id对应的人下\n        let flag = window.confirm(\n          `${newName} is already exited,do you want to replace it?`\n        );\n\n        if (flag === true) {\n          upClick(changePerson);\n        }\n      }\n    } else {\n      phoneBookService\n        .create(object)\n        .then((returnPerson) => setPersons(persons.concat(returnPerson)))\n        \n          setSuccMessage(`${newName} added successful !`);\n          setTimeout(() => {\n            setSuccMessage(null);\n          }, 5000);\n        \n    }\n    setNewname(\"\");\n    setNewphone(\"\");\n  };\n\n  const upClick = (changePerson) => {\n    phoneBookService\n      .updata(changePerson, changePerson.id)\n      .then((returnPerson) => {\n        setPersons(\n          persons.map((person) =>\n            person.id === changePerson.id ? returnPerson : person\n          )\n        );\n      }).catch(error => {\n        setErrMessage(`${changePerson.name} is already removed`)\n        setTimeout(() => {\n          setErrMessage(null)\n        }, (5000));\n      })\n  };\n\n  const delPerson = (person) => {\n    let flag = window.confirm(`Delete ${person.name} ?`);\n    \n    if (flag) {\n      phoneBookService.deleteId(person.id).then(() => {\n        phoneBookService\n          .getAll()\n          .then((returnPerson) => setPersons(returnPerson));\n      });\n      // axios.delete(`http://localhost:3001/persons/${person.id}`).then(() => {\n      //   phoneBookService.getAll()\n      //   .then((response) => setPersons(response));\n\n      //   // let filtedPerson = persons.filter((target) => target.id !== person.id);\n      //   // setPersons(filtedPerson);\n      // });\n    }\n  };\n  const handleChangeName = (event) => {\n    setNewname(event.target.value);\n  };\n  const handleChangePhone = (event) => {\n    setNewphone(event.target.value);\n  };\n\n  const handleChangeFilter = (event) => {\n    setFiltername(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationErr message={errMessage} />\n      <h1>Test</h1>\n      <form>\n        filter show with{\" \"}\n        <input\n          value={filterName}\n          onChange={handleChangeFilter}\n          className=\"input-test\"\n        />\n      </form>\n\n      <h2>add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleChangeName} />\n          number: <input value={newPhone} onChange={handleChangePhone} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n\n      {persons &&\n        persons\n          .filter((person) =>\n            filterName\n              ? person.name.toLowerCase().includes(filterName.toLowerCase())\n              : true\n          )\n          .map((person) => (\n            <div>\n              <p key={person.id}>\n                {person.name} {person.number}\n                <button onClick={() => delPerson(person)}>delete</button>\n              </p>\n            </div>\n          ))}\n      <NotificationSucc message={succMessage} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\n\nReactDOM.render(<App /> , document.getElementById('root'))\n\n\n\n\n\n\n"],"sourceRoot":""}